{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\MultiWEB\\\\Desktop\\\\toni-esterco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MultiWEB\\\\Desktop\\\\toni-esterco\\\\src\\\\components\\\\paginator\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport \"./paginator.css\";\nimport CaretLeft from \"./caret-left\";\nimport CaretRight from \"./caret-right\";\nimport PageNumber from \"./page-number\";\n\nfunction Paginator(_ref) {\n  var offset = _ref.offset,\n      totalPages = _ref.totalPages,\n      isMobile = _ref.isMobile,\n      onPaginate = _ref.onPaginate;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pages = _useState2[0],\n      setPages = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  useEffect(function () {\n    var pages = [];\n\n    for (var i = 0; i < totalPages; i++) {\n      pages.push(i);\n    }\n\n    setPages(pages);\n  }, [totalPages]);\n\n  function render() {\n    var navigationLimit = totalPages < 6 ? totalPages : 5;\n    navigationLimit = isMobile && navigationLimit > 2 ? 2 : navigationLimit;\n\n    if (offset > navigationLimit + index) {\n      setIndex(offset - navigationLimit);\n    }\n\n    if (offset < index) {\n      setIndex(index - 1);\n    }\n\n    return pages.slice(index, navigationLimit + 1 + index).map(function (page) {\n      return React.createElement(PageNumber, {\n        key: page,\n        isActive: offset === page,\n        onClickHandler: function onClickHandler() {\n          return onPaginate(page);\n        },\n        number: page + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    });\n  }\n\n  var styles = {\n    display: 'flex',\n    flexDirection: 'row',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  return React.createElement(\"div\", {\n    className: \"paginator\",\n    style: styles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CaretLeft, {\n    isEnable: offset > 0,\n    isMobile: isMobile,\n    onClickHandler: function onClickHandler() {\n      return onPaginate(offset - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), render(), React.createElement(CaretRight, {\n    isEnable: offset + 1 !== totalPages,\n    isMobile: isMobile,\n    onClickHandler: function onClickHandler() {\n      return onPaginate(offset + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n}\n\nPaginator.defaultProps = {\n  offset: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  isMobile: PropTypes.number.isRequired,\n  onPaginate: PropTypes.func.isRequired\n};\nexport default Paginator;","map":{"version":3,"sources":["C:\\Users\\MultiWEB\\Desktop\\toni-esterco\\src\\components\\paginator\\index.js"],"names":["React","useEffect","useState","PropTypes","CaretLeft","CaretRight","PageNumber","Paginator","offset","totalPages","isMobile","onPaginate","pages","setPages","index","setIndex","i","push","render","navigationLimit","slice","map","page","styles","display","flexDirection","flex","alignItems","justifyContent","defaultProps","number","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,SAASC,SAAT,OAMK;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,UACC,QADDA,UACC;;AAAA,kBAEuBT,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEIU,KAFJ;AAAA,MAEWC,QAFX;;AAAA,mBAGuBX,QAAQ,CAAC,CAAD,CAH/B;AAAA;AAAA,MAGIY,KAHJ;AAAA,MAGWC,QAHX;;AAKHd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,KAAK,GAAG,EAAd;;AAEA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,UAApB,EAAgCO,CAAC,EAAjC,EAAqC;AACnCJ,MAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACD;;AAEDH,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GARQ,EAQN,CAACH,UAAD,CARM,CAAT;;AAUA,WAASS,MAAT,GAAkB;AAChB,QAAIC,eAAe,GAAGV,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8B,CAApD;AAEAU,IAAAA,eAAe,GAAGT,QAAQ,IAAIS,eAAe,GAAG,CAA9B,GAAkC,CAAlC,GAAsCA,eAAxD;;AAEA,QAAIX,MAAM,GAAGW,eAAe,GAAGL,KAA/B,EAAsC;AACpCC,MAAAA,QAAQ,CAACP,MAAM,GAAGW,eAAV,CAAR;AACD;;AAED,QAAIX,MAAM,GAAGM,KAAb,EAAoB;AAClBC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAAOF,KAAK,CACTQ,KADI,CACEN,KADF,EACSK,eAAe,GAAG,CAAlB,GAAsBL,KAD/B,EAEJO,GAFI,CAEA,UAAAC,IAAI;AAAA,aACP,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,IAAjB;AAAuB,QAAA,QAAQ,EAAEd,MAAM,KAAKc,IAA5C;AACE,QAAA,cAAc,EAAE;AAAA,iBAAMX,UAAU,CAACW,IAAD,CAAhB;AAAA,SADlB;AAEE,QAAA,MAAM,EAAEA,IAAI,GAAG,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO;AAAA,KAFJ,CAAP;AAOD;;AAED,MAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,KAFF;AAGbC,IAAAA,IAAI,EAAE,CAHO;AAIbC,IAAAA,UAAU,EAAE,QAJC;AAKbC,IAAAA,cAAc,EAAE;AALH,GAAf;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEL,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEf,MAAM,GAAG,CADrB;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,cAAc,EAAE;AAAA,aAAMC,UAAU,CAACH,MAAM,GAAG,CAAV,CAAhB;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGU,MAAM,EANT,EAOE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEV,MAAM,GAAG,CAAT,KAAeC,UAD3B;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,cAAc,EAAE;AAAA,aAAMC,UAAU,CAACH,MAAM,GAAG,CAAV,CAAhB;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD;;AAEDD,SAAS,CAACsB,YAAV,GAAyB;AACvBrB,EAAAA,MAAM,EAAEL,SAAS,CAAC2B,MAAV,CAAiBC,UADF;AAEvBtB,EAAAA,UAAU,EAAEN,SAAS,CAAC2B,MAAV,CAAiBC,UAFN;AAGvBrB,EAAAA,QAAQ,EAAEP,SAAS,CAAC2B,MAAV,CAAiBC,UAHJ;AAIvBpB,EAAAA,UAAU,EAAER,SAAS,CAAC6B,IAAV,CAAeD;AAJJ,CAAzB;AAOA,eAAexB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport \"./paginator.css\";\r\nimport CaretLeft from \"./caret-left\";\r\nimport CaretRight from \"./caret-right\";\r\nimport PageNumber from \"./page-number\";\r\n\r\nfunction Paginator(\r\n  {\r\n    offset,\r\n    totalPages,\r\n    isMobile,\r\n    onPaginate,\r\n  }) {\r\n\r\n  const [pages, setPages] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 0; i < totalPages; i++) {\r\n      pages.push(i);\r\n    }\r\n\r\n    setPages(pages);\r\n  }, [totalPages]);\r\n\r\n  function render() {\r\n    let navigationLimit = totalPages < 6 ? totalPages : 5;\r\n\r\n    navigationLimit = isMobile && navigationLimit > 2 ? 2 : navigationLimit;\r\n\r\n    if (offset > navigationLimit + index) {\r\n      setIndex(offset - navigationLimit);\r\n    }\r\n\r\n    if (offset < index) {\r\n      setIndex(index - 1);\r\n    }\r\n\r\n    return pages\r\n      .slice(index, navigationLimit + 1 + index)\r\n      .map(page => (\r\n        <PageNumber key={page} isActive={offset === page}\r\n          onClickHandler={() => onPaginate(page)}\r\n          number={page + 1} />)\r\n      );\r\n  }\r\n\r\n  const styles = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }\r\n\r\n  return (\r\n    <div className=\"paginator\" style={styles}>\r\n      <CaretLeft\r\n        isEnable={offset > 0}\r\n        isMobile={isMobile}\r\n        onClickHandler={() => onPaginate(offset - 1)}\r\n      />\r\n      {render()}\r\n      <CaretRight\r\n        isEnable={offset + 1 !== totalPages}\r\n        isMobile={isMobile}\r\n        onClickHandler={() => onPaginate(offset + 1)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nPaginator.defaultProps = {\r\n  offset: PropTypes.number.isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  isMobile: PropTypes.number.isRequired,\r\n  onPaginate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Paginator;\r\n"]},"metadata":{},"sourceType":"module"}